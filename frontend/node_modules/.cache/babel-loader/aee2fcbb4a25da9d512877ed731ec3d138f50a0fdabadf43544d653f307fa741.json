{"ast":null,"code":"import { create } from \"zustand\";\nimport { axiosInstance } from \"../lib/axios\";\nimport { toast } from \"react-hot-toast\";\nimport io from \"socket.io-client\";\nconst BASE_URL = \"http://localhost:5001\";\nexport const useAuthStore = create((set, get) => ({\n  authUser: null,\n  isSigningUp: false,\n  isLoggingIn: false,\n  isUpdatingProfile: false,\n  isCheckingAuth: true,\n  onlineUsers: [],\n  socket: null,\n  // Check authentication status\n  checkAuth: async () => {\n    set({\n      isCheckingAuth: true\n    });\n    try {\n      const response = await axiosInstance.get(\"http://localhost:5001/api/auth/check\");\n      set({\n        authUser: response.data\n      });\n      get().connectSocket();\n    } catch (error) {\n      console.error(error);\n      set({\n        authUser: null\n      });\n    } finally {\n      set({\n        isCheckingAuth: false\n      });\n    }\n  },\n  // Signup function\n  signup: async formData => {\n    set({\n      isSigningUp: true\n    });\n    try {\n      const res = await axiosInstance.post(\"http://localhost:5001/api/auth/signup\", formData);\n      toast.success(\"Account created successfully!\");\n      set({\n        authUser: res.data\n      });\n      get().connectSocket();\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      toast.error(\"Error during signup\");\n    } finally {\n      set({\n        isSigningUp: false\n      });\n    }\n  },\n  // Login function\n  login: async formData => {\n    set({\n      isLoggingIn: true\n    });\n    try {\n      const res = await axiosInstance.post(\"http://localhost:5001/api/auth/login\", formData);\n      set({\n        authUser: res.data\n      });\n      toast.success(\"Logged in successfully!\");\n      get().connectSocket();\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      toast.error(\"Invalid email or password. Please try again.\");\n    } finally {\n      set({\n        isLoggingIn: false\n      });\n    }\n  },\n  // Logout function\n  logout: async () => {\n    try {\n      await axiosInstance.post(\"http://localhost:5001/api/auth/logout\");\n      set({\n        authUser: null\n      });\n      toast.success(\"Logged out successfully!\");\n      get().disconnectSocket();\n    } catch (error) {\n      console.error(\"Error during logout:\", error);\n      toast.error(\"Error during logout\");\n    }\n  },\n  // Update profile\n  updateProfile: async data => {\n    set({\n      isUpdatingProfile: true\n    });\n    try {\n      const res = await axiosInstance.put(\"http://localhost:5001/api/auth/update-profile\", data);\n      set({\n        authUser: res.data\n      });\n      toast.success(\"Profile updated successfully\");\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      toast.error(\"Error updating profile\");\n    } finally {\n      set({\n        isUpdatingProfile: false\n      });\n    }\n  },\n  connectSocket: () => {\n    var _get$socket;\n    const {\n      authUser\n    } = get();\n    if (!authUser || (_get$socket = get().socket) !== null && _get$socket !== void 0 && _get$socket.connected) {\n      return;\n    }\n    const socket = io(BASE_URL);\n    socket.connect();\n  },\n  disconnectSocket: () => {\n    var _get$socket2;\n    if ((_get$socket2 = get().socket) !== null && _get$socket2 !== void 0 && _get$socket2.connected) {\n      get().socket.disconnect();\n    }\n  }\n}));","map":{"version":3,"names":["create","axiosInstance","toast","io","BASE_URL","useAuthStore","set","get","authUser","isSigningUp","isLoggingIn","isUpdatingProfile","isCheckingAuth","onlineUsers","socket","checkAuth","response","data","connectSocket","error","console","signup","formData","res","post","success","login","logout","disconnectSocket","updateProfile","put","_get$socket","connected","connect","_get$socket2","disconnect"],"sources":["/Users/achintiii/chat-app/frontend/src/store/useAuthStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport { axiosInstance } from \"../lib/axios\";\nimport {toast} from \"react-hot-toast\";\nimport io from \"socket.io-client\";\n\nconst BASE_URL = \"http://localhost:5001\";\nexport const useAuthStore = create((set, get) => ({\n    authUser: null,\n    isSigningUp: false,\n    isLoggingIn: false,\n    isUpdatingProfile: false,\n    isCheckingAuth: true,\n    onlineUsers: [],\n    socket : null,\n    // Check authentication status\n    checkAuth: async () => {\n        set({ isCheckingAuth: true });\n        try {\n            const response = await axiosInstance.get(\"http://localhost:5001/api/auth/check\");\n            set({ authUser: response.data });\n            get().connectSocket();\n        } catch (error) {\n            console.error(error);\n            set({ authUser: null });\n        } finally {\n            set({ isCheckingAuth: false });\n        }\n    },\n\n    // Signup function\n    signup: async (formData) => {\n        set({ isSigningUp: true });\n        try {\n            const res = await axiosInstance.post(\"http://localhost:5001/api/auth/signup\", formData);\n            toast.success(\"Account created successfully!\");\n            set({ authUser: res.data });\n\n            get().connectSocket();\n        } catch (error) {\n            console.error(\"Error during signup:\", error);\n            toast.error(\"Error during signup\");\n        } finally {\n            set({ isSigningUp: false });\n        }\n    },\n\n    // Login function\n    login: async (formData) => {\n        set({ isLoggingIn: true });\n        try {\n            const res = await axiosInstance.post(\"http://localhost:5001/api/auth/login\", formData);\n            set({ authUser: res.data });\n            toast.success(\"Logged in successfully!\");\n\n            get().connectSocket();\n        } catch (error) {\n            console.error(\"Error during login:\", error);\n            toast.error(\"Invalid email or password. Please try again.\");\n        } finally {\n            set({ isLoggingIn: false });\n        }\n    },\n\n    // Logout function\n    logout: async () => {\n        try {\n            await axiosInstance.post(\"http://localhost:5001/api/auth/logout\");\n            set({ authUser: null });\n            toast.success(\"Logged out successfully!\");\n            get().disconnectSocket();\n        } catch (error) {\n            console.error(\"Error during logout:\", error);\n            toast.error(\"Error during logout\");\n        }\n    },\n\n    // Update profile\n    updateProfile: async (data) => {\n        set({ isUpdatingProfile: true });\n        try {\n            const res = await axiosInstance.put(\"http://localhost:5001/api/auth/update-profile\", data);\n            set({ authUser: res.data });\n            toast.success(\"Profile updated successfully\");\n            \n        } catch (error) {\n            console.error(\"Error updating profile:\", error);\n            toast.error(\"Error updating profile\");\n        } finally {\n            set({ isUpdatingProfile: false });\n        }\n    },\n    connectSocket: () => {\n        const {authUser} = get();\n        if(!authUser || get().socket?.connected) {\n            return;\n        }\n       const socket = io(BASE_URL)\n       socket.connect();\n    },\n    disconnectSocket: () => {\n        if(get().socket?.connected) {\n            get().socket.disconnect();\n        }\n    }\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}