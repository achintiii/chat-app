{"ast":null,"code":"import { create } from 'zustand';\nimport toast from 'react-hot-toast';\nimport { axiosInstance } from '../lib/axios';\nexport const useChatStore = create(set => ({\n  messages: [],\n  users: [],\n  selectedUser: null,\n  isUsersLoading: false,\n  isMessagesLoading: false,\n  getUsers: async () => {\n    set({\n      isUsersLoading: true\n    });\n    try {\n      const res = await axiosInstance.get('/messages/users');\n      console.log('Fetched users:', res.data); // Debugging log\n      set({\n        users: res.data\n      }); // Update users\n    } catch (error) {\n      console.error('Error fetching users:', error); // Log error\n      toast.error('Failed to fetch users');\n    } finally {\n      set({\n        isUsersLoading: false\n      });\n    }\n  },\n  getMessages: async userId => {\n    set({\n      isMessagesLoading: true\n    });\n    try {\n      const res = await axiosInstance.get(`/messages/${userId}`);\n      console.log('Fetched messages:', res.data); // Debugging log\n      set({\n        messages: res.data\n      }); // Update messages\n    } catch (error) {\n      console.error('Error fetching messages:', error); // Log error\n      toast.error('Failed to fetch messages');\n    } finally {\n      set({\n        isMessagesLoading: false\n      });\n    }\n  },\n  setSelectedUser: selectedUser => {\n    set({\n      selectedUser\n    });\n  }\n}));","map":{"version":3,"names":["create","toast","axiosInstance","useChatStore","set","messages","users","selectedUser","isUsersLoading","isMessagesLoading","getUsers","res","get","console","log","data","error","getMessages","userId","setSelectedUser"],"sources":["/Users/achintiii/chat-app/frontend/src/store/useChatStore.js"],"sourcesContent":["import { create } from 'zustand';\nimport toast from 'react-hot-toast';\nimport { axiosInstance } from '../lib/axios';\n\nexport const useChatStore = create((set) => ({\n    messages: [], \n    users: [],\n    selectedUser: null,\n    isUsersLoading: false,\n    isMessagesLoading: false,\n\n    getUsers: async () => {\n        set({ isUsersLoading: true });\n        try {\n            const res = await axiosInstance.get('/messages/users');\n            console.log('Fetched users:', res.data); // Debugging log\n            set({ users: res.data }); // Update users\n        } catch (error) {\n            console.error('Error fetching users:', error); // Log error\n            toast.error('Failed to fetch users');\n        } finally {\n            set({ isUsersLoading: false });\n        }\n    },\n\n    getMessages: async (userId) => {\n        set({ isMessagesLoading: true });\n        try {\n            const res = await axiosInstance.get(`/messages/${userId}`);\n            console.log('Fetched messages:', res.data); // Debugging log\n            set({ messages: res.data }); // Update messages\n        } catch (error) {\n            console.error('Error fetching messages:', error); // Log error\n            toast.error('Failed to fetch messages');\n            \n        } finally {\n            set({ isMessagesLoading: false });\n        }\n    },\n\n    setSelectedUser: (selectedUser) => {\n        set({ selectedUser });\n        \n    },\n}));\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,KAAK,MAAM,iBAAiB;AACnC,SAASC,aAAa,QAAQ,cAAc;AAE5C,OAAO,MAAMC,YAAY,GAAGH,MAAM,CAAEI,GAAG,KAAM;EACzCC,QAAQ,EAAE,EAAE;EACZC,KAAK,EAAE,EAAE;EACTC,YAAY,EAAE,IAAI;EAClBC,cAAc,EAAE,KAAK;EACrBC,iBAAiB,EAAE,KAAK;EAExBC,QAAQ,EAAE,MAAAA,CAAA,KAAY;IAClBN,GAAG,CAAC;MAAEI,cAAc,EAAE;IAAK,CAAC,CAAC;IAC7B,IAAI;MACA,MAAMG,GAAG,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,iBAAiB,CAAC;MACtDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;MACzCX,GAAG,CAAC;QAAEE,KAAK,EAAEK,GAAG,CAACI;MAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAC/Cf,KAAK,CAACe,KAAK,CAAC,uBAAuB,CAAC;IACxC,CAAC,SAAS;MACNZ,GAAG,CAAC;QAAEI,cAAc,EAAE;MAAM,CAAC,CAAC;IAClC;EACJ,CAAC;EAEDS,WAAW,EAAE,MAAOC,MAAM,IAAK;IAC3Bd,GAAG,CAAC;MAAEK,iBAAiB,EAAE;IAAK,CAAC,CAAC;IAChC,IAAI;MACA,MAAME,GAAG,GAAG,MAAMT,aAAa,CAACU,GAAG,CAAC,aAAaM,MAAM,EAAE,CAAC;MAC1DL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,GAAG,CAACI,IAAI,CAAC,CAAC,CAAC;MAC5CX,GAAG,CAAC;QAAEC,QAAQ,EAAEM,GAAG,CAACI;MAAK,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC,CAAC;MAClDf,KAAK,CAACe,KAAK,CAAC,0BAA0B,CAAC;IAE3C,CAAC,SAAS;MACNZ,GAAG,CAAC;QAAEK,iBAAiB,EAAE;MAAM,CAAC,CAAC;IACrC;EACJ,CAAC;EAEDU,eAAe,EAAGZ,YAAY,IAAK;IAC/BH,GAAG,CAAC;MAAEG;IAAa,CAAC,CAAC;EAEzB;AACJ,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}