{"ast":null,"code":"import { create } from \"zustand\";\nimport { axiosInstance } from \"../lib/axios\";\nimport { toast } from \"react-hot-toast\";\nexport const useAuthStore = create(set => ({\n  authUser: null,\n  isSigningUp: false,\n  isLoggingIn: false,\n  isUpdatingProfile: false,\n  isCheckingAuth: true,\n  onlineUsers: [],\n  // Check authentication status\n  checkAuth: async () => {\n    set({\n      isCheckingAuth: true\n    });\n    try {\n      const response = await axiosInstance.get(\"http://localhost:5001/api/auth/check\");\n      set({\n        authUser: response.data\n      });\n    } catch (error) {\n      console.error(error);\n      set({\n        authUser: null\n      });\n    } finally {\n      set({\n        isCheckingAuth: false\n      });\n    }\n  },\n  // Signup function\n  signup: async formData => {\n    set({\n      isSigningUp: true\n    });\n    try {\n      const res = await axiosInstance.post(\"http://localhost:5001/api/auth/signup\", formData);\n      toast.success(\"Account created successfully!\");\n      set({\n        authUser: res.data\n      });\n    } catch (error) {\n      console.error(\"Error during signup:\", error);\n      toast.error(\"Error during signup\");\n    } finally {\n      set({\n        isSigningUp: false\n      });\n    }\n  },\n  // Login function\n  login: async formData => {\n    set({\n      isLoggingIn: true\n    });\n    try {\n      const res = await axiosInstance.post(\"http://localhost:5001/api/auth/login\", formData);\n      set({\n        authUser: res.data\n      });\n      toast.success(\"Logged in successfully!\");\n    } catch (error) {\n      console.error(\"Error during login:\", error);\n      toast.error(\"Invalid email or password. Please try again.\");\n    } finally {\n      set({\n        isLoggingIn: false\n      });\n    }\n  },\n  // Logout function\n  logout: async () => {\n    try {\n      await axiosInstance.post(\"http://localhost:5001/api/auth/logout\");\n      set({\n        authUser: null\n      });\n      toast.success(\"Logged out successfully!\");\n    } catch (error) {\n      console.error(\"Error during logout:\", error);\n      toast.error(\"Error during logout\");\n    }\n  },\n  // Update profile\n  updateProfile: async data => {\n    set({\n      isUpdatingProfile: true\n    });\n    try {\n      const res = await axiosInstance.put(\"http://localhost:5001/api/auth/update-profile\", data);\n      set({\n        authUser: res.data\n      });\n      toast.success(\"Profile updated successfully\");\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n      toast.error(\"Error updating profile\");\n    } finally {\n      set({\n        isUpdatingProfile: false\n      });\n    }\n  }\n}));","map":{"version":3,"names":["create","axiosInstance","toast","useAuthStore","set","authUser","isSigningUp","isLoggingIn","isUpdatingProfile","isCheckingAuth","onlineUsers","checkAuth","response","get","data","error","console","signup","formData","res","post","success","login","logout","updateProfile","put"],"sources":["/Users/achintiii/chat-app/frontend/src/store/useAuthStore.js"],"sourcesContent":["import { create } from \"zustand\";\nimport { axiosInstance } from \"../lib/axios\";\nimport {toast} from \"react-hot-toast\";\n\nexport const useAuthStore = create((set) => ({\n    authUser: null,\n    isSigningUp: false,\n    isLoggingIn: false,\n    isUpdatingProfile: false,\n    isCheckingAuth: true,\n    onlineUsers: [],\n    // Check authentication status\n    checkAuth: async () => {\n        set({ isCheckingAuth: true });\n        try {\n            const response = await axiosInstance.get(\"http://localhost:5001/api/auth/check\");\n            set({ authUser: response.data });\n        } catch (error) {\n            console.error(error);\n            set({ authUser: null });\n        } finally {\n            set({ isCheckingAuth: false });\n        }\n    },\n\n    // Signup function\n    signup: async (formData) => {\n        set({ isSigningUp: true });\n        try {\n            const res = await axiosInstance.post(\"http://localhost:5001/api/auth/signup\", formData);\n            toast.success(\"Account created successfully!\");\n            set({ authUser: res.data });\n        } catch (error) {\n            console.error(\"Error during signup:\", error);\n            toast.error(\"Error during signup\");\n        } finally {\n            set({ isSigningUp: false });\n        }\n    },\n\n    // Login function\n    login: async (formData) => {\n        set({ isLoggingIn: true });\n        try {\n            const res = await axiosInstance.post(\"http://localhost:5001/api/auth/login\", formData);\n            set({ authUser: res.data });\n            toast.success(\"Logged in successfully!\");\n        } catch (error) {\n            console.error(\"Error during login:\", error);\n            toast.error(\"Invalid email or password. Please try again.\");\n        } finally {\n            set({ isLoggingIn: false });\n        }\n    },\n\n    // Logout function\n    logout: async () => {\n        try {\n            await axiosInstance.post(\"http://localhost:5001/api/auth/logout\");\n            set({ authUser: null });\n            toast.success(\"Logged out successfully!\");\n        } catch (error) {\n            console.error(\"Error during logout:\", error);\n            toast.error(\"Error during logout\");\n        }\n    },\n\n    // Update profile\n    updateProfile: async (data) => {\n        set({ isUpdatingProfile: true });\n        try {\n            const res = await axiosInstance.put(\"http://localhost:5001/api/auth/update-profile\", data);\n            set({ authUser: res.data });\n            toast.success(\"Profile updated successfully\");\n            \n        } catch (error) {\n            console.error(\"Error updating profile:\", error);\n            toast.error(\"Error updating profile\");\n        } finally {\n            set({ isUpdatingProfile: false });\n        }\n    },\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}